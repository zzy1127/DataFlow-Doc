import{_ as o,c as n,a as r,b as d,d as t,e as i,w as s,r as m,o as l}from"./app-BqDkFDvD.js";const h={};function p(c,e){const a=m("VPLink");return l(),n("div",null,[r("p",null,[e[1]||(e[1]=t("Note: We have set up corresponding filters for each scorer, named following the rules ")),e[2]||(e[2]=r("code",null,"MetricnameScorer",-1)),e[3]||(e[3]=t(" and ")),e[4]||(e[4]=r("code",null,"MetricFilter",-1)),e[5]||(e[5]=t(". Please refer to the ")),i(a,{href:"./image_metrics.md"},{default:s(()=>e[0]||(e[0]=[t("image_metrics.md")])),_:1,__:[0]}),e[6]||(e[6]=t(" for an introduction to these filters. The following introduces only the processors that differ from the previous scorers."))]),e[7]||(e[7]=d('<table><thead><tr><th>Processor Name</th><th>Description</th></tr></thead><tbody><tr><td>ImagePHashDeduplicator</td><td>Based on the <a href="https://www.hackerfactor.com/blog/index.php?/archives/432-Looks-Like-It.html" target="_blank" rel="noopener noreferrer">Perceptual hashing</a> method from <a href="https://github.com/idealo/imagededup" target="_blank" rel="noopener noreferrer">imagededup</a></td></tr><tr><td>ImageDHashDeduplicator</td><td>Based on the <a href="https://www.hackerfactor.com/blog/index.php?/archives/529-Kind-of-Like-That.html" target="_blank" rel="noopener noreferrer">Difference hashing</a> method from <a href="https://github.com/idealo/imagededup" target="_blank" rel="noopener noreferrer">imagededup</a></td></tr><tr><td>ImageWHashDeduplicator</td><td>Based on the <a href="https://fullstackml.com/wavelet-image-hash-in-python-3504fdd282b5" target="_blank" rel="noopener noreferrer">Wavelet hashing</a> method from <a href="https://github.com/idealo/imagededup" target="_blank" rel="noopener noreferrer">imagededup</a></td></tr><tr><td>ImageAHashDeduplicator</td><td>Based on the <a href="https://www.hackerfactor.com/blog/index.php?/archives/432-Looks-Like-It.html" target="_blank" rel="noopener noreferrer">Average hashing</a> method from <a href="https://github.com/idealo/imagededup" target="_blank" rel="noopener noreferrer">imagededup</a></td></tr><tr><td>ImageAspectRatioFilter</td><td>Filters images based on their aspect ratio</td></tr><tr><td>ImageResolutionFilter</td><td>Filters images based on their resolution</td></tr></tbody></table>',1))])}const f=o(h,[["render",p]]),u=JSON.parse('{"path":"/en/guide/zq7npeyf/","title":"Image Data Processors","lang":"en-US","frontmatter":{"title":"Image Data Processors","createTime":"2025/06/09 11:43:25","permalink":"/en/guide/zq7npeyf/"},"readingTime":{"minutes":0.49,"words":146},"git":{"createdTime":1749441278000,"updatedTime":1750133178000,"contributors":[{"name":"Sunnyhaze","username":"Sunnyhaze","email":"mxch1122@126.com","commits":1,"avatar":"https://avatars.githubusercontent.com/Sunnyhaze?v=4","url":"https://github.com/Sunnyhaze"},{"name":"Ma, Xiaochen","username":"","email":"mxch1122@126.com","commits":2,"avatar":"https://gravatar.com/avatar/c86bc98abf428aa442dfc12c76e70e324a551ebc637e5ed6634d60fbd3811221?d=retro"}]},"filePathRelative":"en/notes/guide/operators/image_process.md","headers":[]}');export{f as comp,u as data};
