import{_ as e,c as t,b as n,o as i}from"./app-BqDkFDvD.js";const l={};function s(r,a){return i(),t("div",null,a[0]||(a[0]=[n('<h3 id="_1-任务规划阶段-planning-agent" tabindex="-1"><a class="header-anchor" href="#_1-任务规划阶段-planning-agent"><span>1. <strong>任务规划阶段（Planning Agent）</strong></span></a></h3><ul><li><strong>任务分解（Decompose Tasks）</strong>： <ul><li>根据用户的输入（如自然语言需求、数据特性、目标等），解析任务目标。</li><li>对复杂任务进行细粒度分解，形成清晰的子任务列表。</li></ul></li><li><strong>定义任务链（Define Task Chain）</strong>： <ul><li>将子任务按依赖关系组织成任务链（Pipeline）。</li><li>如果用户需求明确，可以直接生成符合需求的标准任务链；否则，通过任务推理生成。</li></ul></li></ul><h3 id="_2-工具注册阶段-tool-register" tabindex="-1"><a class="header-anchor" href="#_2-工具注册阶段-tool-register"><span>2. <strong>工具注册阶段（Tool Register）</strong></span></a></h3><ul><li><strong>注册工具（Register Predefined Tools）</strong>： <ul><li>预定义工具库：包括数据抽样、清洗、评估、生成等算子。</li><li>动态工具生成：通过包扫描和算子描述提取（如 <code>get_desc</code>），自动注册新的工具。</li><li>工具描述向量化：结合功能描述、输入输出类型、示例数据等信息，生成工具的语义表示，用于后续检索和推荐。</li></ul></li></ul><h3 id="_3-任务调度阶段-task-dispatcher" tabindex="-1"><a class="header-anchor" href="#_3-任务调度阶段-task-dispatcher"><span>3. <strong>任务调度阶段（Task Dispatcher）</strong></span></a></h3><ul><li><strong>分配任务（Assign Tasks to Agent）</strong>： <ul><li>根据任务链，按顺序或并行分发任务给对应的 Agent。</li><li>提供任务链的上下文跟踪（如 <code>sessionKEY</code> 用于多轮对话追踪）。</li></ul></li></ul><h3 id="_4-任务执行阶段-execution-agent" tabindex="-1"><a class="header-anchor" href="#_4-任务执行阶段-execution-agent"><span>4. <strong>任务执行阶段（Execution Agent）</strong></span></a></h3><ul><li><strong>生成工具（Generate Tools）</strong>： <ul><li>动态编写任务所需代码（如 Python 脚本），并对代码进行调试。</li><li>执行过程中，自动获取任务参数（如用户输入或上一个任务的输出）并填充到代码中。</li><li>当缺少参数或上下文时，Execution Agent 会调用用户提示补全。</li></ul></li><li><strong>处理任务（Process Tasks）</strong>： <ul><li>执行任务链中的节点操作，包括预定义工具调用或动态生成工具的执行。</li><li>将执行结果实时传递给后续任务节点，或返回给用户查看。</li></ul></li></ul><h3 id="_5-结果评估阶段-evaluation-agent" tabindex="-1"><a class="header-anchor" href="#_5-结果评估阶段-evaluation-agent"><span>5. <strong>结果评估阶段（Evaluation Agent）</strong></span></a></h3><ul><li><strong>调试与验证（Debug and Validate）</strong>： <ul><li>对任务执行结果进行语法、逻辑和数据完整性校验。</li><li>针对代码型任务，检查代码运行结果是否符合预期（如返回符合 JSON 格式的结果）。</li></ul></li></ul><h3 id="_6-分析与总结阶段-analysis-agent" tabindex="-1"><a class="header-anchor" href="#_6-分析与总结阶段-analysis-agent"><span>6. <strong>分析与总结阶段（Analysis Agent）</strong></span></a></h3><ul><li><p><strong>总结与报告生成（Summarize and Generate Report）</strong>：</p><ul><li>分析任务执行过程和结果，生成可读性强的报告。</li><li>生成多轮对话的上下文总结，支持用户快速查看任务链的整体执行情况。</li></ul></li></ul>',12)]))}const g=e(l,[["render",s]]),u=JSON.parse('{"path":"/zh/guide/agent/agent_for_data/","title":"Agent数据治理","lang":"zh-CN","frontmatter":{"title":"Agent数据治理","icon":"material-symbols:robot-2-outline","createTime":"2025/06/17 15:56:00","permalink":"/zh/guide/agent/agent_for_data/"},"readingTime":{"minutes":2,"words":601},"git":{"createdTime":1750154453000,"updatedTime":1750154453000,"contributors":[{"name":"Hao Liang","username":"","email":"hao.liang@stu.pku.edu.cn","commits":1,"avatar":"https://gravatar.com/avatar/105bae3e8661728b9f2f5440992b04f5f28459b66a049d09b52213ce1438f6bc?d=retro"},{"name":"HeRunming","username":"HeRunming","email":"2100010636@stu.pku.edu.cn","commits":1,"avatar":"https://avatars.githubusercontent.com/HeRunming?v=4","url":"https://github.com/HeRunming"},{"name":"Ma, Xiaochen","username":"","email":"mxch1122@126.com","commits":1,"avatar":"https://gravatar.com/avatar/c86bc98abf428aa442dfc12c76e70e324a551ebc637e5ed6634d60fbd3811221?d=retro"}]},"filePathRelative":"zh/notes/guide/agent/agent_for_data.md","headers":[]}');export{g as comp,u as data};
