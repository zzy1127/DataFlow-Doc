import{_ as e,c as a,b as i,o as s}from"./app-BqDkFDvD.js";const l={};function d(n,t){return s(),a("div",null,t[0]||(t[0]=[i('<h2 id="📘-概述-codeencodeddatasampleevaluator" tabindex="-1"><a class="header-anchor" href="#📘-概述-codeencodeddatasampleevaluator"><span>📘 概述 <a href="https://github.com/OpenDCAI/DataFlow/blob/main/dataflow/operators/evaluator/code/code_encoded_data_sample_evaluator.py" target="_blank" rel="noopener noreferrer">CodeEncodedDataSampleEvaluator</a></span></a></h2><p>CodeEncodedDataSampleEvaluator 是一个基于编码数据模式评估代码样本的算子。它通过检测代码中的 Base64、十六进制和 Unicode 转义序列，为过滤二进制内容和自动生成的代码提供分数。</p><h2 id="init-函数" tabindex="-1"><a class="header-anchor" href="#init-函数"><span>__init__函数</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">def</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> __init__</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">self</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="init参数说明" tabindex="-1"><a class="header-anchor" href="#init参数说明"><span>init参数说明</span></a></h3><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">无</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td><td style="text-align:left;">该算子在初始化时无需传入参数。</td></tr></tbody></table><h3 id="prompt模板说明" tabindex="-1"><a class="header-anchor" href="#prompt模板说明"><span>Prompt模板说明</span></a></h3><h2 id="run函数" tabindex="-1"><a class="header-anchor" href="#run函数"><span>run函数</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">def</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> run</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">self</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> storage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> input_key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>storage</strong></td><td style="text-align:left;">DataFlowStorage</td><td style="text-align:left;">必需</td><td style="text-align:left;">数据流存储实例，负责读取与写入数据。</td></tr><tr><td style="text-align:left;"><strong>input_key</strong></td><td style="text-align:left;">str</td><td style="text-align:left;">必需</td><td style="text-align:left;">输入列名，对应需要评估的代码文本字段。</td></tr></tbody></table><h2 id="🧠-示例用法" tabindex="-1"><a class="header-anchor" href="#🧠-示例用法"><span>🧠 示例用法</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="🧾-默认输出格式-output-format" tabindex="-1"><a class="header-anchor" href="#🧾-默认输出格式-output-format"><span>🧾 默认输出格式（Output Format）</span></a></h4><p>该算子会向 DataFrame 中添加以下新列：</p><table><thead><tr><th style="text-align:left;">字段</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">CodeEncodedDataBase64Ratio</td><td style="text-align:left;">float</td><td style="text-align:left;">Base64编码数据的比例。</td></tr><tr><td style="text-align:left;">CodeEncodedDataHexRatio</td><td style="text-align:left;">float</td><td style="text-align:left;">十六进制数据的比例。</td></tr><tr><td style="text-align:left;">CodeEncodedDataUnicodeRatio</td><td style="text-align:left;">float</td><td style="text-align:left;">Unicode转义序列的比例。</td></tr><tr><td style="text-align:left;">CodeEncodedDataScore</td><td style="text-align:left;">float</td><td style="text-align:left;">综合编码数据得分（0-1），1表示通过编码数据检查。</td></tr></tbody></table>',16)]))}const h=e(l,[["render",d]]),o=JSON.parse('{"path":"/zh/api/operators/code/eval/codeencodeddatasampleevaluator/","title":"CodeEncodedDataSampleEvaluator","lang":"zh-CN","frontmatter":{"title":"CodeEncodedDataSampleEvaluator","createTime":"2025/10/09 17:09:04","permalink":"/zh/api/operators/code/eval/codeencodeddatasampleevaluator/"},"readingTime":{"minutes":0.88,"words":264},"git":{"createdTime":1760001305000,"updatedTime":1760001305000,"contributors":[{"name":"Hao Liang","username":"","email":"hao.liang@stu.pku.edu.cn","commits":1,"avatar":"https://gravatar.com/avatar/105bae3e8661728b9f2f5440992b04f5f28459b66a049d09b52213ce1438f6bc?d=retro"}]},"filePathRelative":"zh/notes/api/operators/code/eval/CodeEncodedDataSampleEvaluator.md","headers":[]}');export{h as comp,o as data};
