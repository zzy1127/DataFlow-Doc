import{_ as e,c as i,b as s,o as a}from"./app-BqDkFDvD.js";const n={};function l(r,t){return a(),i("div",null,t[0]||(t[0]=[s(`<h2 id="ðŸ“˜-overview" tabindex="-1"><a class="header-anchor" href="#ðŸ“˜-overview"><span>ðŸ“˜ Overview</span></a></h2><p>The <code>SQLVariationGenerator</code> operator generates variations of SQL based on existing SQLs, including data replacement, function transformation, and difficulty transformation, to generate more diverse SQLs. It takes an existing SQL query and its corresponding database schema as input, then leverages a large language model (LLM) to produce a specified number of new, related SQL queries.</p><h2 id="init-function" tabindex="-1"><a class="header-anchor" href="#init-function"><span><code>__init__</code> function</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">def</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> __init__</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">self</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">             llm_serving</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> LLMServingABC</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">             database_manager</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> DatabaseManager</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">             num_variations</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> int</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 10</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">             prompt_template </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> None</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">             )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>llm_serving</strong></td><td style="text-align:left;">LLMServingABC</td><td style="text-align:left;">Required</td><td style="text-align:left;">The large language model serving instance used for generation.</td></tr><tr><td style="text-align:left;"><strong>database_manager</strong></td><td style="text-align:left;">DatabaseManager</td><td style="text-align:left;">Required</td><td style="text-align:left;">Manages database connections and schema retrieval.</td></tr><tr><td style="text-align:left;"><strong>num_variations</strong></td><td style="text-align:left;">int</td><td style="text-align:left;">10</td><td style="text-align:left;">The number of SQL variations to generate for each input SQL query.</td></tr><tr><td style="text-align:left;"><strong>prompt_template</strong></td><td style="text-align:left;">PromptABC</td><td style="text-align:left;">SQLVariationGeneratorPrompt()</td><td style="text-align:left;">The prompt template object used to construct the input for the LLM.</td></tr></tbody></table><h3 id="prompt-template-descriptions" tabindex="-1"><a class="header-anchor" href="#prompt-template-descriptions"><span>Prompt Template Descriptions</span></a></h3><table><thead><tr><th style="text-align:left;">Prompt Template Name</th><th style="text-align:left;">Primary Purpose</th><th style="text-align:left;">Applicable Scenarios</th><th style="text-align:left;">Feature Description</th></tr></thead><tbody><tr><td style="text-align:left;"></td><td style="text-align:left;"></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr></tbody></table><h2 id="run-function" tabindex="-1"><a class="header-anchor" href="#run-function"><span><code>run</code> function</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">def</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> run</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">self</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        storage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> DataFlowStorage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        input_sql_key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">sql</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        input_db_id_key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">db_id</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>storage</strong></td><td style="text-align:left;">DataFlowStorage</td><td style="text-align:left;">Required</td><td style="text-align:left;">The data flow storage instance for reading and writing data.</td></tr><tr><td style="text-align:left;"><strong>input_sql_key</strong></td><td style="text-align:left;">str</td><td style="text-align:left;">&quot;sql&quot;</td><td style="text-align:left;">The column name in the input data that contains the SQL queries.</td></tr><tr><td style="text-align:left;"><strong>input_db_id_key</strong></td><td style="text-align:left;">str</td><td style="text-align:left;">&quot;db_id&quot;</td><td style="text-align:left;">The column name in the input data that contains the database identifiers.</td></tr></tbody></table><h2 id="ðŸ§ -example-usage" tabindex="-1"><a class="header-anchor" href="#ðŸ§ -example-usage"><span>ðŸ§  Example Usage</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="ðŸ§¾-output-format" tabindex="-1"><a class="header-anchor" href="#ðŸ§¾-output-format"><span>ðŸ§¾ Output Format</span></a></h4><p>The operator modifies the input dataframe by appending new rows, each containing a generated SQL variation. The original data is preserved.</p><table><thead><tr><th style="text-align:left;">Field</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>[input_sql_key]</strong></td><td style="text-align:left;">str</td><td style="text-align:left;">The original or a newly generated SQL query.</td></tr><tr><td style="text-align:left;"><strong>[input_db_id_key]</strong></td><td style="text-align:left;">str</td><td style="text-align:left;">The identifier for the database associated with the SQL query.</td></tr><tr><td style="text-align:left;"><em>...</em></td><td style="text-align:left;"><em>...</em></td><td style="text-align:left;">Other columns from the original input data are preserved.</td></tr></tbody></table>`,15)]))}const h=e(n,[["render",l]]),p=JSON.parse('{"path":"/en/api/operators/text2sql/generate/sqlvariationgenerator/","title":"SQLVariationGenerator","lang":"en-US","frontmatter":{"title":"SQLVariationGenerator","createTime":"2025/10/09 16:52:48","permalink":"/en/api/operators/text2sql/generate/sqlvariationgenerator/"},"readingTime":{"minutes":0.9,"words":269},"git":{"createdTime":1760001305000,"updatedTime":1760001305000,"contributors":[{"name":"Hao Liang","username":"","email":"hao.liang@stu.pku.edu.cn","commits":1,"avatar":"https://gravatar.com/avatar/105bae3e8661728b9f2f5440992b04f5f28459b66a049d09b52213ce1438f6bc?d=retro"}]},"filePathRelative":"en/notes/api/operators/text2sql/generate/SQLVariationGenerator.md","headers":[]}');export{h as comp,p as data};
