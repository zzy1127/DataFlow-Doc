import{_ as e,c as a,b as i,o as l}from"./app-BqDkFDvD.js";const s={};function d(n,t){return l(),a("div",null,t[0]||(t[0]=[i('<h2 id="📘-概述-codedocumentqualitysampleevaluator" tabindex="-1"><a class="header-anchor" href="#📘-概述-codedocumentqualitysampleevaluator"><span>📘 概述 <a href="https://github.com/OpenDCAI/DataFlow/blob/main/dataflow/operators/reasoning/generate/reasoning_answer_generator.py" target="_blank" rel="noopener noreferrer">CodeDocumentQualitySampleEvaluator</a></span></a></h2><p><code>CodeDocumentQualitySampleEvaluator</code> 是一个代码文档质量评估算子，它基于综合的文档级质量指标（如内容长度、重复模式、字符组成和文本熵值）来评估代码样本，并为过滤低质量内容提供分数。</p><p><strong>评估指标：</strong></p><ul><li><code>CodeDocumentQualityCharCount</code>: 字符数</li><li><code>CodeDocumentQualityWordCount</code>: 词数</li><li><code>CodeDocumentQualityDuplicateLinesRatio</code>: 重复行比例</li><li><code>CodeDocumentQualityDuplicateNgramRatio</code>: n-gram重复比例</li><li><code>CodeDocumentQualityCurlyBracketRatio</code>: 花括号比例</li><li><code>CodeDocumentQualityAllCapsRatio</code>: 全大写单词比例</li><li><code>CodeDocumentQualityEntropy</code>: 单字符熵值</li><li><code>CodeDocumentQualityScore</code>: 综合文档质量得分 (0-1，1表示通过所有质量检查)</li></ul><h2 id="init-函数" tabindex="-1"><a class="header-anchor" href="#init-函数"><span>__init__函数</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">def</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> __init__</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">self</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> thresholds</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Dict</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Any</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> None</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">):</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="init参数说明" tabindex="-1"><a class="header-anchor" href="#init参数说明"><span>init参数说明</span></a></h3><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>thresholds</strong></td><td style="text-align:left;"><code>Dict[str, Any]</code></td><td style="text-align:left;"><code>None</code></td><td style="text-align:left;">用于覆盖默认质量指标阈值的可选字典。</td></tr></tbody></table><h3 id="prompt模板说明" tabindex="-1"><a class="header-anchor" href="#prompt模板说明"><span>Prompt模板说明</span></a></h3><h2 id="run函数" tabindex="-1"><a class="header-anchor" href="#run函数"><span>run函数</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">def</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> run</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">self</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> storage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> DataFlowStorage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> input_key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>storage</strong></td><td style="text-align:left;"><code>DataFlowStorage</code></td><td style="text-align:left;">必需</td><td style="text-align:left;">数据流存储实例，负责读取与写入数据。</td></tr><tr><td style="text-align:left;"><strong>input_key</strong></td><td style="text-align:left;"><code>str</code></td><td style="text-align:left;">必需</td><td style="text-align:left;">输入列名，对应需要评估的代码样本字段。</td></tr></tbody></table><h2 id="🧠-示例用法" tabindex="-1"><a class="header-anchor" href="#🧠-示例用法"><span>🧠 示例用法</span></a></h2><h4 id="🧾-默认输出格式-output-format" tabindex="-1"><a class="header-anchor" href="#🧾-默认输出格式-output-format"><span>🧾 默认输出格式（Output Format）</span></a></h4><table><thead><tr><th style="text-align:left;">字段</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">(原始输入列)</td><td style="text-align:left;">-</td><td style="text-align:left;">保留输入的所有原始列。</td></tr><tr><td style="text-align:left;"><code>CodeDocumentQualityCharCount</code></td><td style="text-align:left;">int</td><td style="text-align:left;">样本中的总字符数。</td></tr><tr><td style="text-align:left;"><code>CodeDocumentQualityWordCount</code></td><td style="text-align:left;">int</td><td style="text-align:left;">样本中的总词数。</td></tr><tr><td style="text-align:left;"><code>CodeDocumentQualityDuplicateLinesRatio</code></td><td style="text-align:left;">float</td><td style="text-align:left;">重复行的比例。</td></tr><tr><td style="text-align:left;"><code>CodeDocumentQualityDuplicate&lt;N&gt;gramRatio</code></td><td style="text-align:left;">float</td><td style="text-align:left;">重复 N-gram 的比例 (N从2到10)。</td></tr><tr><td style="text-align:left;"><code>CodeDocumentQualityCurlyBracketRatio</code></td><td style="text-align:left;">float</td><td style="text-align:left;">花括号字符在总字符中的比例。</td></tr><tr><td style="text-align:left;"><code>CodeDocumentQualityAllCapsRatio</code></td><td style="text-align:left;">float</td><td style="text-align:left;">全大写单词在总词数中的比例。</td></tr><tr><td style="text-align:left;"><code>CodeDocumentQualityEntropy</code></td><td style="text-align:left;">float</td><td style="text-align:left;">基于单字符的文本熵值。</td></tr><tr><td style="text-align:left;"><code>CodeDocumentQualityScore</code></td><td style="text-align:left;">float</td><td style="text-align:left;">综合文档质量得分（0或1），1表示通过所有质量检查。</td></tr></tbody></table>',16)]))}const r=e(s,[["render",d]]),h=JSON.parse('{"path":"/zh/api/operators/code/eval/codedocumentqualitysampleevaluator/","title":"CodeDocumentQualitySampleEvaluator","lang":"zh-CN","frontmatter":{"title":"CodeDocumentQualitySampleEvaluator","createTime":"2025/10/09 17:09:04","permalink":"/zh/api/operators/code/eval/codedocumentqualitysampleevaluator/"},"readingTime":{"minutes":1.35,"words":404},"git":{"createdTime":1760001305000,"updatedTime":1760001305000,"contributors":[{"name":"Hao Liang","username":"","email":"hao.liang@stu.pku.edu.cn","commits":1,"avatar":"https://gravatar.com/avatar/105bae3e8661728b9f2f5440992b04f5f28459b66a049d09b52213ce1438f6bc?d=retro"}]},"filePathRelative":"zh/notes/api/operators/code/eval/CodeDocumentQualitySampleEvaluator.md","headers":[]}');export{r as comp,h as data};
