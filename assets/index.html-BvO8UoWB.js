import{_ as t,c as e,b as n,o}from"./app-BqDkFDvD.js";const r={};function i(s,a){return o(),e("div",null,a[0]||(a[0]=[n('<p>近年来，大模型的发展在很大程度上依赖于大规模、高质量的训练数据。然而，目前主流的训练数据及其处理流程多未公开，公开数据资源的规模和质量仍有限，给社区在构建和优化大模型训练数据的过程中带来不小挑战。</p><p>尽管已有如 Open-DataLab 等组织推动数据集的开源，大模型数据准备仍然是一个高度依赖手工和分散实现的过程。现阶段，不同团队往往需要各自构建清洗与构造流程，缺乏统一、系统化的工具支持。随着大模型技术的飞速发展，Agent技术逐渐应用于各行各业，使基于大模型完成高效，低成本的数据治理成为可能。然而已有数据处理工具（如Hadoop和Spark）大多以传统方法为核心，尚未对大模型的自动化数据治理进行集成和优化，对于高效构建适用于大模型训练的数据支持仍显不足。</p><p>为此，我们提出了 <strong>DataFlow</strong>——一个由先进算子（Operators）与多阶段数据处理流水线（Pipeline） 组成的高效数据准备系统。DataFlow 充分结合了规则方法、深度学习模型和大模型的能力，提供了可扩展、可重组的模块化设计，旨在提升数据清洗、增强与构建的质量与效率，助力下一代大模型的发展。</p><h2 id="dataflow-一个高质量数据准备系统" tabindex="-1"><a class="header-anchor" href="#dataflow-一个高质量数据准备系统"><span>DataFlow：一个高质量数据准备系统</span></a></h2><p><strong>DataFlow</strong> 是一个高效完成高质量数据治理的系统，旨在对诸如 PDF 文档、纯文本、爬虫数据等低质量而嘈杂的数据进行 <strong>修正、扩增、评估与过滤</strong>（refine, generate, evaluate, filt） 以得到高质量的训练数据。这些数据可以通过预训练、有监督微调、强化学习训练提升大语言模型在通用领域（推理能力和检索能力）与特定领域（如医疗、金融、法律等）的性能。此外，Dataflow产出的高质量数据也可以有效赋能现有的RAG系统。</p><p>具体而言，DataFlow系统由如下部分组成：</p><ol><li><strong>算子（Operator）：</strong>：我们对于多种数据治理需求进行了分析与抽象，构建了一系列多样化的算子，这些算子基于规则方法、深度学习模型、大语言模型（LLMs）以及 LLM API 开发而成。算子具有原子性，便于复用和框架级别统一优化。</li><li><strong>流水线（Pipeline）：</strong>：为了实现具体的数据治理功能，将算子经过有序连接即可构建完整的流水线应用于具体场景。Dataflow中预设了相当数量的流水线服务于多种领域功能，用户可灵活增删预设流水线中的算子以满足定制化需求。</li><li><strong>提示词和提示词模板（Prompt &amp; Prompt Template）</strong>：针对于大模型数据治理，有些微妙的需求是不足以单独设置新算子的。这时候就需要通过替换不同的提示词模板来达成需求。这时就需要对所有的提示词和提示词模板进行注册。并建立算子到可选提示词or提示词模板的映射。便于用户查阅或由Agent调用。</li></ol><p>经过合理的编排和组装，这些经过抽象和复用的算子和提示词模板即可系统性地整合进数据处理流水线中，满足多样化的数据治理需求。</p><p>此外，我们还提供了智能的<strong>Dataflow-Agent</strong>，能够根据自然语言需求动态组合已有的算子，自动构建新的数据处理流程，从而实现更灵活、高效的数据构建与处理能力。</p><p>综上，算子，流水线，提示词和提示词模板，以及Dataflow-Agent构成了完整的 <strong>DataFlow 数据治理系统</strong>。</p>',10)]))}const c=t(r,[["render",i]]),l=JSON.parse('{"path":"/zh/guide/intro/basicinfo/intro/","title":"简介","lang":"zh-CN","frontmatter":{"title":"简介","icon":"mdi:tooltip-text-outline","createTime":"2025/06/13 14:51:34","permalink":"/zh/guide/intro/basicinfo/intro/"},"readingTime":{"minutes":3.44,"words":1032},"git":{"createdTime":1749801349000,"updatedTime":1758703836000,"contributors":[{"name":"Sunnyhaze","username":"Sunnyhaze","email":"mxch1122@126.com","commits":2,"avatar":"https://avatars.githubusercontent.com/Sunnyhaze?v=4","url":"https://github.com/Sunnyhaze"},{"name":"Ma, Xiaochen","username":"","email":"mxch1122@126.com","commits":3,"avatar":"https://gravatar.com/avatar/c86bc98abf428aa442dfc12c76e70e324a551ebc637e5ed6634d60fbd3811221?d=retro"},{"name":"Hao Liang","username":"","email":"hao.liang@stu.pku.edu.cn","commits":1,"avatar":"https://gravatar.com/avatar/105bae3e8661728b9f2f5440992b04f5f28459b66a049d09b52213ce1438f6bc?d=retro"},{"name":"HeRunming","username":"HeRunming","email":"2100010636@stu.pku.edu.cn","commits":1,"avatar":"https://avatars.githubusercontent.com/HeRunming?v=4","url":"https://github.com/HeRunming"}]},"filePathRelative":"zh/notes/guide/basicinfo/intro.md","headers":[]}');export{c as comp,l as data};
