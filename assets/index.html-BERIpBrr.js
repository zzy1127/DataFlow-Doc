import{_ as i,c as a,b as n,o as e}from"./app-BqDkFDvD.js";const l={};function t(p,s){return e(),a("div",null,s[0]||(s[0]=[n(`<p>A complete text processing and training pipeline with intelligent Text2QA generation capabilities.</p><h2 id="quick-start" tabindex="-1"><a class="header-anchor" href="#quick-start"><span>Quick Start</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Environment setup</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -n</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dataflow</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3.10</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> activate</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dataflow</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clone</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://github.com/OpenDCAI/DataFlow.git</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> DataFlow</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -e</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> llamafactory[torch,metrics]</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> open-dataflow[vllm]</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Model download</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># First option: choose either one</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Second option: select all</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mineru-models-download</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Run program</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ..</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> test</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Initialize</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dataflow</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> text2model</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Train</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dataflow</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> text2model</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> train</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Chat with trained model, or chat with local trained model</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dataflow</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> chat</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="step-1-install-dataflow-environment" tabindex="-1"><a class="header-anchor" href="#step-1-install-dataflow-environment"><span>Step 1: Install DataFlow Environment</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Create environment</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -n</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dataflow</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3.10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Activate environment</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> activate</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dataflow</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Enter root directory</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> DataFlow</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Install mineru base environment</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -e</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Install llamafactory environment</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> llamafactory[torch,metrics]</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> open-dataflow[vllm]</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mineru-models-download</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="step-2-create-new-dataflow-working-folder" tabindex="-1"><a class="header-anchor" href="#step-2-create-new-dataflow-working-folder"><span>Step 2: Create New DataFlow Working Folder</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run_dataflow</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run_dataflow</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="step-3-setup-dataset" tabindex="-1"><a class="header-anchor" href="#step-3-setup-dataset"><span>Step 3: Setup Dataset</span></a></h2><p>Place appropriately sized dataset (data files in JSON or JSONL format) into the working folder.</p><h2 id="step-4-initialize-dataflow-text2model" tabindex="-1"><a class="header-anchor" href="#step-4-initialize-dataflow-text2model"><span>Step 4: Initialize DataFlow-text2model</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Initialize</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># --cache can specify .cache directory location (optional)</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Default value is current folder directory</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dataflow</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> text2model</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After initialization, the project directory becomes:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Project Root/</span></span>
<span class="line"><span>├── text_2_qa_pipeline.py     # Text2QA generation pipeline</span></span>
<span class="line"><span>└── .cache/                   # Cache directory</span></span>
<span class="line"><span>    └── train_config.yaml     # Default configuration file for llamafactory training</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="step-5-one-click-fine-tuning" tabindex="-1"><a class="header-anchor" href="#step-5-one-click-fine-tuning"><span>Step 5: One-Click Fine-tuning</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># --lf_yaml can specify the path of llamafactory yaml parameter file for training (optional)</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Default value is .cache/train_config.yaml</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># --input-keys can specify fields to detect in json files</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Default value is text</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dataflow</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> text2model</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> train</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After fine-tuning completion, the project directory becomes:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Project Root/</span></span>
<span class="line"><span>├── text_2_qa_pipeline.py     # Text2QA generation</span></span>
<span class="line"><span>└── .cache/                   # Cache directory</span></span>
<span class="line"><span>    ├── train_config.yaml     # Default configuration file for llamafactory training</span></span>
<span class="line"><span>    ├── pt_input.jsonl        # Merged input data</span></span>
<span class="line"><span>    ├── data/</span></span>
<span class="line"><span>    │   ├── dataset_info.json</span></span>
<span class="line"><span>    │   └── qa.json</span></span>
<span class="line"><span>    ├── gpu/</span></span>
<span class="line"><span>    │   ├── text_input.jsonl          # Text2QA input file (if using Text2QA)</span></span>
<span class="line"><span>    │   ├── text2qa_step_step1.json</span></span>
<span class="line"><span>    │   ├── text2qa_step_step2.json</span></span>
<span class="line"><span>    │   ├── text2qa_step_step3.json   # Text2QA output</span></span>
<span class="line"><span>    │   └── sft_dataflow_cache_step_*.jsonl  # SFT processing files</span></span>
<span class="line"><span>    └── saves/</span></span>
<span class="line"><span>        └── text2model_cache_{time}/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="step-6-chat-with-fine-tuned-model" tabindex="-1"><a class="header-anchor" href="#step-6-chat-with-fine-tuned-model"><span><strong>Step 6: Chat with Fine-tuned Model</strong></span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Method 1: Specify model path with --model flag (optional)</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Default path: .cache/saves/text2model_cache_{timestamp}</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dataflow</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> chat</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --model</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./custom_model_path</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Method 2: Navigate to model directory and run dataflow chat</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .cache/saves/text2model_cache_{timestamp}</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dataflow</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> chat</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19)]))}const h=i(l,[["render",t]]),r=JSON.parse('{"path":"/en/guide/uw6hfcwp/","title":"Text2ModelPipeline","lang":"en-US","frontmatter":{"title":"Text2ModelPipeline","createTime":"2025/08/31 03:42:49","permalink":"/en/guide/uw6hfcwp/"},"readingTime":{"minutes":1.19,"words":357},"git":{"createdTime":1756711927000,"updatedTime":1757049331000,"contributors":[{"name":"Yalin-Feng","username":"Yalin-Feng","email":"Feng_Yalin@163.com","commits":2,"avatar":"https://avatars.githubusercontent.com/Yalin-Feng?v=4","url":"https://github.com/Yalin-Feng"},{"name":"Ma, Xiaochen","username":"","email":"mxch1122@126.com","commits":1,"avatar":"https://gravatar.com/avatar/c86bc98abf428aa442dfc12c76e70e324a551ebc637e5ed6634d60fbd3811221?d=retro"}]},"filePathRelative":"en/notes/guide/pipelines/Text2ModelPipeline.md","headers":[]}');export{h as comp,r as data};
