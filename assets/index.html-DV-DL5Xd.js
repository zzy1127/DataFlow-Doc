import{_ as e,c as i,b as s,o as a}from"./app-BqDkFDvD.js";const n={};function l(r,t){return a(),i("div",null,t[0]||(t[0]=[s('<h2 id="ðŸ“˜-overview" tabindex="-1"><a class="header-anchor" href="#ðŸ“˜-overview"><span>ðŸ“˜ Overview</span></a></h2><p>The <code>CondorRefiner</code> is an operator designed to improve the quality of instruction-response pairs through a two-stage process. In the first stage, it generates a critique of the initial response. In the second stage, it uses this critique to refine the original response, thereby enhancing the overall quality of the question-answering pair through iterative optimization.</p><h2 id="init" tabindex="-1"><a class="header-anchor" href="#init"><span><code>__init__</code></span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">def</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> __init__</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">self</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> llm_serving</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> LLMServingABC </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> None</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>llm_serving</strong></td><td style="text-align:left;">LLMServingABC</td><td style="text-align:left;">None</td><td style="text-align:left;">An instance of a Large Language Model service, used for generating critiques and refined answers.</td></tr></tbody></table><h2 id="prompt-template-descriptions" tabindex="-1"><a class="header-anchor" href="#prompt-template-descriptions"><span>Prompt Template Descriptions</span></a></h2><table><thead><tr><th style="text-align:left;">Prompt Template Name</th><th style="text-align:left;">Primary Use</th><th style="text-align:left;">Applicable Scenarios</th><th style="text-align:left;">Feature Description</th></tr></thead><tbody><tr><td style="text-align:left;"></td><td style="text-align:left;"></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr></tbody></table><h2 id="run" tabindex="-1"><a class="header-anchor" href="#run"><span><code>run</code></span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">def</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> run</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">self</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> storage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> DataFlowStorage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> input_instruction_key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">instruction</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> input_output_key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">output</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>storage</strong></td><td style="text-align:left;">DataFlowStorage</td><td style="text-align:left;">Required</td><td style="text-align:left;">An instance of DataFlowStorage, responsible for reading and writing data.</td></tr><tr><td style="text-align:left;"><strong>input_instruction_key</strong></td><td style="text-align:left;">str</td><td style="text-align:left;">&quot;instruction&quot;</td><td style="text-align:left;">The column name in the input data that contains the instructions or questions.</td></tr><tr><td style="text-align:left;"><strong>input_output_key</strong></td><td style="text-align:left;">str</td><td style="text-align:left;">&quot;output&quot;</td><td style="text-align:left;">The column name in the input data that contains the responses to be refined. This column will be overwritten with the refined answers.</td></tr></tbody></table><h2 id="ðŸ§ -example-usage" tabindex="-1"><a class="header-anchor" href="#ðŸ§ -example-usage"><span>ðŸ§  Example Usage</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="ðŸ§¾-input-format" tabindex="-1"><a class="header-anchor" href="#ðŸ§¾-input-format"><span>ðŸ§¾ Input Format</span></a></h4><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-json"><span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="ðŸ§¾-output-format" tabindex="-1"><a class="header-anchor" href="#ðŸ§¾-output-format"><span>ðŸ§¾ Output Format</span></a></h4><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-json"><span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',16)]))}const d=e(n,[["render",l]]),o=JSON.parse('{"path":"/en/api/operators/text_sft/refine/condorrefiner/","title":"CondorRefiner","lang":"en-US","frontmatter":{"title":"CondorRefiner","createTime":"2025/10/09 16:52:48","permalink":"/en/api/operators/text_sft/refine/condorrefiner/"},"readingTime":{"minutes":0.63,"words":190},"git":{"createdTime":1760001305000,"updatedTime":1760001305000,"contributors":[{"name":"Hao Liang","username":"","email":"hao.liang@stu.pku.edu.cn","commits":1,"avatar":"https://gravatar.com/avatar/105bae3e8661728b9f2f5440992b04f5f28459b66a049d09b52213ce1438f6bc?d=retro"}]},"filePathRelative":"en/notes/api/operators/text_sft/refine/CondorRefiner.md","headers":[]}');export{d as comp,o as data};
