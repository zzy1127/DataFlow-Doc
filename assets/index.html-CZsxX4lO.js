import{_ as t,c as a,b as i,o as s}from"./app-BqDkFDvD.js";const n={};function l(d,e){return s(),a("div",null,e[0]||(e[0]=[i('<h2 id="ðŸ“˜-overview" tabindex="-1"><a class="header-anchor" href="#ðŸ“˜-overview"><span>ðŸ“˜ Overview</span></a></h2><p>The <code>CodeEncodedDataSampleEvaluator</code> is an operator designed to evaluate code samples by detecting patterns of encoded data, such as Base64, hexadecimal, and Unicode escape sequences. It calculates ratios for each pattern and produces a final score, which is useful for filtering out binary content or auto-generated code that has been embedded within text files.</p><h2 id="init" tabindex="-1"><a class="header-anchor" href="#init"><span><code>__init__</code></span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">def</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> __init__</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">self</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This operator does not require any parameters during initialization.</p><h2 id="prompt-template-descriptions" tabindex="-1"><a class="header-anchor" href="#prompt-template-descriptions"><span>Prompt Template Descriptions</span></a></h2><p>(No information provided)</p><h2 id="run" tabindex="-1"><a class="header-anchor" href="#run"><span><code>run</code></span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">def</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> run</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">self</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> storage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> DataFlowStorage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> input_key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Executes the main logic of the operator. It reads a DataFrame from storage, evaluates each sample in the specified input column for encoded data patterns, and writes the new columns containing the scores back to the storage.</p><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>storage</strong></td><td style="text-align:left;">DataFlowStorage</td><td style="text-align:left;">Required</td><td style="text-align:left;">The data flow storage instance for reading and writing data.</td></tr><tr><td style="text-align:left;"><strong>input_key</strong></td><td style="text-align:left;">str</td><td style="text-align:left;">Required</td><td style="text-align:left;">The name of the input column containing the text to be evaluated.</td></tr></tbody></table><h2 id="ðŸ§ -example-usage" tabindex="-1"><a class="header-anchor" href="#ðŸ§ -example-usage"><span>ðŸ§  Example Usage</span></a></h2><p>(No information provided)</p><h4 id="ðŸ§¾-output-format" tabindex="-1"><a class="header-anchor" href="#ðŸ§¾-output-format"><span>ðŸ§¾ Output Format</span></a></h4><p>The operator appends the following columns to the original DataFrame:</p><table><thead><tr><th style="text-align:left;">Field</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">CodeEncodedDataBase64Ratio</td><td style="text-align:left;">float</td><td style="text-align:left;">The ratio of Base64 encoded data in the text.</td></tr><tr><td style="text-align:left;">CodeEncodedDataHexRatio</td><td style="text-align:left;">float</td><td style="text-align:left;">The ratio of hexadecimal data in the text.</td></tr><tr><td style="text-align:left;">CodeEncodedDataUnicodeRatio</td><td style="text-align:left;">float</td><td style="text-align:left;">The ratio of Unicode escape sequences in the text.</td></tr><tr><td style="text-align:left;">CodeEncodedDataScore</td><td style="text-align:left;">float</td><td style="text-align:left;">A comprehensive score between 0.0 and 1.0. A score of 1.0 indicates the sample passes the encoded data checks.</td></tr></tbody></table>',16)]))}const o=t(n,[["render",l]]),h=JSON.parse('{"path":"/en/api/operators/code/eval/codeencodeddatasampleevaluator/","title":"CodeEncodedDataSampleEvaluator","lang":"en-US","frontmatter":{"title":"CodeEncodedDataSampleEvaluator","createTime":"2025/10/09 16:52:48","permalink":"/en/api/operators/code/eval/codeencodeddatasampleevaluator/"},"readingTime":{"minutes":0.78,"words":235},"git":{"createdTime":1760001305000,"updatedTime":1760001305000,"contributors":[{"name":"Hao Liang","username":"","email":"hao.liang@stu.pku.edu.cn","commits":1,"avatar":"https://gravatar.com/avatar/105bae3e8661728b9f2f5440992b04f5f28459b66a049d09b52213ce1438f6bc?d=retro"}]},"filePathRelative":"en/notes/api/operators/code/eval/CodeEncodedDataSampleEvaluator.md","headers":[]}');export{o as comp,h as data};
